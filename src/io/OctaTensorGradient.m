function grad = OctaTensorGradient(q, x, y, z)
n = length(x);
assert(n == size(q, 2));

q = q';

dx = [2.*pi.^(-1/2).*x.*(x.^2+y.^2+z.^2),(-3/4).*(35.*pi.^(-1)).^(1/2).*y.*((-3).* ...
  x.^2+y.^2),(9/2).*((35/2).*pi.^(-1)).^(1/2).*x.*y.*z,(-3/4).*(5.*pi.^(-1)).^( ...
  1/2).*y.*(3.*x.^2+y.^2+(-6).*z.^2),(-9/2).*((5/2).*pi.^(-1)).^(1/2).*x.*y.*z,( ...
  9/4).*pi.^(-1/2).*x.*(x.^2+y.^2+(-4).*z.^2),(3/4).*((5/2).*pi.^(-1)).^(1/2).*z.* ...
  ((-9).*x.^2+(-3).*y.^2+4.*z.^2),(-3/2).*(5.*pi.^(-1)).^(1/2).*x.*(x.^2+(-3).* ...
  z.^2),(9/4).*((35/2).*pi.^(-1)).^(1/2).*(x.^2+(-1).*y.^2).*z,(3/4).*(35.*pi.^( ...
  -1)).^(1/2).*(x.^3+(-3).*x.*y.^2)];
dy = [2.*pi.^(-1/2).*y.*(x.^2+y.^2+z.^2),(3/4).*(35.*pi.^(-1)).^(1/2).*x.*(x.^2+(-3) ...
  .*y.^2),(9/4).*((35/2).*pi.^(-1)).^(1/2).*(x.^2+(-1).*y.^2).*z,(-3/4).*(5.*pi.^( ...
  -1)).^(1/2).*x.*(x.^2+3.*y.^2+(-6).*z.^2),(3/4).*((5/2).*pi.^(-1)).^(1/2).*z.*(( ...
  -3).*x.^2+(-9).*y.^2+4.*z.^2),(9/4).*pi.^(-1/2).*y.*(x.^2+y.^2+(-4).*z.^2),( ...
  -9/2).*((5/2).*pi.^(-1)).^(1/2).*x.*y.*z,(3/2).*(5.*pi.^(-1)).^(1/2).*y.*(y.^2+( ...
  -3).*z.^2),(-9/2).*((35/2).*pi.^(-1)).^(1/2).*x.*y.*z,(-3/4).*(35.*pi.^(-1)).^( ...
  1/2).*(3.*x.^2.*y+(-1).*y.^3)];
dz = [2.*pi.^(-1/2).*z.*(x.^2+y.^2+z.^2),zeros(n, 1),(-3/4).*((35/2).*pi.^(-1)).^(1/2).*y.*(( ...
  -3).*x.^2+y.^2),9.*(5.*pi.^(-1)).^(1/2).*x.*y.*z,(-9/4).*((5/2).*pi.^(-1)).^( ...
  1/2).*y.*(x.^2+y.^2+(-4).*z.^2),pi.^(-1/2).*((-9).*x.^2.*z+(-9).*y.^2.*z+6.* ...
  z.^3),(-9/4).*((5/2).*pi.^(-1)).^(1/2).*x.*(x.^2+y.^2+(-4).*z.^2),(9/2).*(5.* ...
  pi.^(-1)).^(1/2).*(x.^2+(-1).*y.^2).*z,(3/4).*((35/2).*pi.^(-1)).^(1/2).*x.*( ...
  x.^2+(-3).*y.^2),zeros(n, 1)];

grad = [dot(q, dx, 2), dot(q, dy, 2), dot(q, dz, 2)];

end
